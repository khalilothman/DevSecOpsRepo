pipeline {

  agent any 
  tools {
    maven 'Maven'
  }
  
   stages {    
     stage ('Initialize') {
      steps {
        sh '''
                    echo "PATH = ${PATH}"
                    echo "M2_HOME = ${M2_HOME}"
           ''' }
       }
       
       }
  }
    
   
   stage ('Build') {
      steps {
      sh 'mvn clean package'
       }
    }
    
  //*  stage ('ASoC Trial') {
   //   steps {
        
     //   appscan application: '6625861d-3c06-4449-9425-7baaaec6c51e', credentials: 'FCA Trial ASoC', failBuild: true, failureConditions: [failure_condition(failureType: 'high', threshold: 5)], name: 'WebDev', scanner: static_analyzer(hasOptions: false, target: '/opt/bitnami/jenkins/jenkins_home/workspace/DevSecOps'), type: 'Static Analyzer', wait: true
        
    //  }
  //  }*/
  
   stage('OWASP Dependency Check') {
            steps {
                sh './DevSecOpsRepo dependencyCheckAnalyze'
            }
        }
    

    post {
        always {
            dependencyCheckPublisher pattern: 'build/reports/dependency-check-report.xml'
        }
    }
    
 
    stage ('DAST') {
      steps {
        sshagent(['zap']) {
         sh 'ssh -o  StrictHostKeyChecking=no bitnami@18.222.205.38 "docker run -t owasp/zap2docker-stable zap-baseline.py -t http://18.220.87.220:8080/WebApp/" || true'
        }
      }
     
    }
    
    
    
   
  
